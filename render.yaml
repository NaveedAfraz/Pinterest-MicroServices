services:
  - name: redis
    type: web # Let's try 'web' with an image
    plan: free
    image: redis:alpine
    healthCheckPath: /PING
    healthCheckTimeout: 30
    internal: true # Make it only accessible internally

  - name: rabbitmq
    type: web # Let's also try 'web' with an image
    plan: free
    image: rabbitmq:3-management
    env:
      - RABBITMQ_DEFAULT_USER: guest
      - RABBITMQ_DEFAULT_PASS: guest
    healthCheckPath: /
    healthCheckTimeout: 60
    internal: true # Make it only accessible internally

  - name: api-proxypoint
    type: web
    plan: starter
    dockerfilePath: ./backend/api-proxypoint/Dockerfile
    env:
      - REDIS_URL: redis://redis:6379
      - RABBITMQ_URL: amqp://rabbitmq:5672
    buildCommand: npm install && npm run build
    startCommand: npm start

  - name: identity-service
    type: worker
    plan: starter
    dockerfilePath: ./backend/identity-service/Dockerfile
    env:
      - REDIS_URL: redis://redis:6379
      - RABBITMQ_URL: amqp://rabbitmq:5672
    buildCommand: npm install
    startCommand: npm start

  - name: media-service
    type: worker
    plan: starter
    dockerfilePath: ./backend/media-service/Dockerfile
    env:
      - REDIS_URL: redis://redis:6379
      - RABBITMQ_URL: amqp://rabbitmq:5672
    buildCommand: npm install
    startCommand: npm start

  - name: post-service
    type: worker
    plan: starter
    dockerfilePath: ./backend/post-service/Dockerfile
    env:
      - REDIS_URL: redis://redis:6379
      - RABBITMQ_URL: amqp://rabbitmq:5672
    buildCommand: npm install
    startCommand: npm start

  - name: search-service
    type: worker
    plan: starter
    dockerfilePath: ./backend/search-service/Dockerfile
    env:
      - REDIS_URL: redis://redis:6379
      - RABBITMQ_URL: amqp://rabbitmq:5672
    buildCommand: npm install
    startCommand: npm start